[gd_resource type="VisualShader" load_steps=63 format=2]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "vertex"

[sub_resource type="VisualShaderNodeScalarOp" id=2]
default_input_values = [ 0, 10.0, 1, 3.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "camera"

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 3.0, 1, -10.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=5]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
default_input_values = [ 0, 10.0, 1, 3.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=7]
default_input_values = [ 0, 3.0, 1, -10.0 ]
operator = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id=8]

[sub_resource type="VisualShaderNodeScalarFunc" id=9]

[sub_resource type="VisualShaderNodeScalarOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=11]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 9

[sub_resource type="VisualShaderNodeScalarInterp" id=13]
default_input_values = [ 0, 1.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 31.0, 1, 10.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, -10.0, 1, 29.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 9

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 9

[sub_resource type="VisualShaderNodeColorUniform" id=21]
uniform_name = "Color"

[sub_resource type="VisualShaderNodeVec3Uniform" id=22]
uniform_name = "size"

[sub_resource type="VisualShaderNodeVectorDecompose" id=23]

[sub_resource type="VisualShaderNodeVectorOp" id=24]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=25]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVec3Uniform" id=26]
uniform_name = "field_origin"

[sub_resource type="VisualShaderNodeScalarOp" id=27]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=28]
default_input_values = [ 0, 0.0, 1, -1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=29]
function = 27

[sub_resource type="VisualShaderNodeVec3Uniform" id=30]
uniform_name = "Field_Rotation"

[sub_resource type="VisualShaderNodeVectorDecompose" id=31]

[sub_resource type="VisualShaderNodeScalarFunc" id=32]
function = 27

[sub_resource type="VisualShaderNodeScalarFunc" id=33]
function = 27

[sub_resource type="VisualShaderNodeScalarFunc" id=34]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=35]
function = 0

[sub_resource type="VisualShaderNodeVectorDecompose" id=36]

[sub_resource type="VisualShaderNodeScalarFunc" id=37]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=38]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=39]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=40]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=41]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=42]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=43]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=44]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=45]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=46]

[sub_resource type="VisualShaderNodeScalarOp" id=47]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=48]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=49]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=50]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=51]

[sub_resource type="VisualShaderNodeScalarOp" id=52]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=53]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=54]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=55]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=56]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=57]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=58]

[sub_resource type="VisualShaderNodeScalarOp" id=59]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=60]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=61]
uniform_name = "TextureUniform"
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=62]
input_name = "uv"

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled;

uniform sampler2D TextureUniform : hint_albedo;
uniform vec3 size;
uniform vec3 field_origin;
uniform vec3 Field_Rotation;



void vertex() {
// Output:0

}

void fragment() {
// Input:95
	vec3 n_out95p0 = vec3(UV, 0.0);

// TextureUniform:94
	vec3 n_out94p0;
	float n_out94p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out95p0.xy);
		n_out94p0 = n_tex_read.rgb;
		n_out94p1 = n_tex_read.a;
	}

// VectorUniform:56
	vec3 n_out56p0 = size;

// VectorOp:58
	vec3 n_in58p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out58p0 = n_out56p0 / n_in58p1;

// VectorDecompose:57
	float n_out57p0 = n_out58p0.x;
	float n_out57p1 = n_out58p0.y;
	float n_out57p2 = n_out58p0.z;

// Input:3
	mat4 n_out3p0 = CAMERA_MATRIX;

// Input:2
	vec3 n_out2p0 = VERTEX;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out3p0 * vec4(n_out2p0, 1.0)).xyz;

// VectorUniform:6
	vec3 n_out6p0 = field_origin;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 - n_out6p0;

// VectorDecompose:7
	float n_out7p0 = n_out5p0.x;
	float n_out7p1 = n_out5p0.y;
	float n_out7p2 = n_out5p0.z;

// VectorUniform:64
	vec3 n_out64p0 = Field_Rotation;

// VectorDecompose:65
	float n_out65p0 = n_out64p0.x;
	float n_out65p1 = n_out64p0.y;
	float n_out65p2 = n_out64p0.z;

// ScalarFunc:66
	float n_out66p0 = radians(n_out65p1);

// ScalarFunc:70
	float n_out70p0 = cos(n_out66p0);

// ScalarOp:74
	float n_out74p0 = n_out7p0 * n_out70p0;

// ScalarFunc:71
	float n_out71p0 = sin(n_out66p0);

// ScalarOp:75
	float n_out75p0 = n_out7p2 * n_out71p0;

// ScalarOp:78
	float n_out78p0 = n_out74p0 - n_out75p0;

// ScalarFunc:67
	float n_out67p0 = radians(n_out65p2);

// ScalarFunc:72
	float n_out72p0 = cos(n_out67p0);

// ScalarOp:86
	float n_out86p0 = n_out78p0 * n_out72p0;

// ScalarOp:76
	float n_out76p0 = n_out7p0 * n_out71p0;

// ScalarOp:77
	float n_out77p0 = n_out7p2 * n_out70p0;

// ScalarOp:79
	float n_out79p0 = n_out76p0 + n_out77p0;

// ScalarFunc:63
	float n_out63p0 = radians(n_out65p0);

// ScalarFunc:69
	float n_out69p0 = sin(n_out63p0);

// ScalarOp:81
	float n_out81p0 = n_out79p0 * n_out69p0;

// ScalarFunc:68
	float n_out68p0 = cos(n_out63p0);

// ScalarOp:82
	float n_out82p0 = n_out7p1 * n_out68p0;

// ScalarOp:84
	float n_out84p0 = n_out81p0 + n_out82p0;

// ScalarFunc:73
	float n_out73p0 = sin(n_out67p0);

// ScalarOp:87
	float n_out87p0 = n_out84p0 * n_out73p0;

// ScalarOp:90
	float n_out90p0 = n_out86p0 - n_out87p0;

// ScalarOp:37
	float n_out37p0 = n_out57p0 - n_out90p0;

// ScalarOp:59
	float n_in59p1 = -1.00000;
	float n_out59p0 = n_out57p0 * n_in59p1;

// ScalarOp:39
	float n_out39p0 = n_out90p0 - n_out59p0;

// ScalarFunc:40
	float n_out40p0 = sign(n_out39p0);

// ScalarOp:44
	float n_out44p0 = n_out37p0 * n_out40p0;

// ScalarOp:53
	float n_in53p0 = 0.00000;
	float n_out53p0 = step(n_in53p0, n_out44p0);

// ScalarOp:88
	float n_out88p0 = n_out78p0 * n_out73p0;

// ScalarOp:89
	float n_out89p0 = n_out84p0 * n_out72p0;

// ScalarOp:91
	float n_out91p0 = n_out88p0 + n_out89p0;

// ScalarOp:28
	float n_out28p0 = n_out57p1 - n_out91p0;

// ScalarOp:60
	float n_in60p1 = -1.00000;
	float n_out60p0 = n_out57p1 * n_in60p1;

// ScalarOp:33
	float n_out33p0 = n_out91p0 - n_out60p0;

// ScalarFunc:34
	float n_out34p0 = sign(n_out33p0);

// ScalarOp:42
	float n_out42p0 = n_out28p0 * n_out34p0;

// ScalarOp:45
	float n_in45p0 = 0.00000;
	float n_out45p0 = step(n_in45p0, n_out42p0);

// ScalarOp:92
	float n_out92p0 = n_out53p0 * n_out45p0;

// ScalarOp:85
	float n_out85p0 = n_out79p0 * n_out68p0;

// ScalarOp:80
	float n_out80p0 = n_out7p1 * n_out69p0;

// ScalarOp:83
	float n_out83p0 = n_out85p0 - n_out80p0;

// ScalarOp:47
	float n_out47p0 = n_out57p2 - n_out83p0;

// ScalarOp:61
	float n_in61p1 = -1.00000;
	float n_out61p0 = n_out57p2 * n_in61p1;

// ScalarOp:48
	float n_out48p0 = n_out83p0 - n_out61p0;

// ScalarFunc:49
	float n_out49p0 = sign(n_out48p0);

// ScalarOp:50
	float n_out50p0 = n_out47p0 * n_out49p0;

// ScalarOp:51
	float n_in51p0 = 0.00000;
	float n_out51p0 = step(n_in51p0, n_out50p0);

// ScalarOp:93
	float n_out93p0 = n_out92p0 * n_out51p0;

// ScalarMix:46
	float n_in46p0 = 1.00000;
	float n_in46p1 = 0.00000;
	float n_out46p0 = mix(n_in46p0, n_in46p1, n_out93p0);

// Output:0
	ALBEDO = n_out94p0;
	ALPHA = n_out46p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 564.077, 18.7724 )
modes/cull = 2
modes/depth_draw = 3
nodes/fragment/0/position = Vector2( 3260, 920 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -4860, 820 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( -4660, 240 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( -4320, 280 )
nodes/fragment/5/node = SubResource( 17 )
nodes/fragment/5/position = Vector2( -3520, 220 )
nodes/fragment/6/node = SubResource( 26 )
nodes/fragment/6/position = Vector2( -4220, 480 )
nodes/fragment/7/node = SubResource( 36 )
nodes/fragment/7/position = Vector2( -3200, 220 )
nodes/fragment/28/node = SubResource( 2 )
nodes/fragment/28/position = Vector2( 920, 1100 )
nodes/fragment/33/node = SubResource( 4 )
nodes/fragment/33/position = Vector2( 920, 1340 )
nodes/fragment/34/node = SubResource( 5 )
nodes/fragment/34/position = Vector2( 1260, 1440 )
nodes/fragment/37/node = SubResource( 6 )
nodes/fragment/37/position = Vector2( 920, 540 )
nodes/fragment/39/node = SubResource( 7 )
nodes/fragment/39/position = Vector2( 920, 760 )
nodes/fragment/40/node = SubResource( 9 )
nodes/fragment/40/position = Vector2( 1260, 840 )
nodes/fragment/42/node = SubResource( 10 )
nodes/fragment/42/position = Vector2( 1300, 1100 )
nodes/fragment/44/node = SubResource( 11 )
nodes/fragment/44/position = Vector2( 1300, 540 )
nodes/fragment/45/node = SubResource( 12 )
nodes/fragment/45/position = Vector2( 1680, 1100 )
nodes/fragment/46/node = SubResource( 13 )
nodes/fragment/46/position = Vector2( 2680, 1120 )
nodes/fragment/47/node = SubResource( 14 )
nodes/fragment/47/position = Vector2( 920, 1700 )
nodes/fragment/48/node = SubResource( 15 )
nodes/fragment/48/position = Vector2( 920, 1940 )
nodes/fragment/49/node = SubResource( 16 )
nodes/fragment/49/position = Vector2( 1260, 2020 )
nodes/fragment/50/node = SubResource( 18 )
nodes/fragment/50/position = Vector2( 1300, 1700 )
nodes/fragment/51/node = SubResource( 19 )
nodes/fragment/51/position = Vector2( 1680, 1700 )
nodes/fragment/53/node = SubResource( 20 )
nodes/fragment/53/position = Vector2( 1680, 540 )
nodes/fragment/55/node = SubResource( 21 )
nodes/fragment/55/position = Vector2( 2680, 720 )
nodes/fragment/56/node = SubResource( 22 )
nodes/fragment/56/position = Vector2( -620, 1980 )
nodes/fragment/57/node = SubResource( 23 )
nodes/fragment/57/position = Vector2( -620, 1560 )
nodes/fragment/58/node = SubResource( 24 )
nodes/fragment/58/position = Vector2( -620, 1760 )
nodes/fragment/59/node = SubResource( 25 )
nodes/fragment/59/position = Vector2( 380, 840 )
nodes/fragment/60/node = SubResource( 27 )
nodes/fragment/60/position = Vector2( 480, 1340 )
nodes/fragment/61/node = SubResource( 28 )
nodes/fragment/61/position = Vector2( 480, 1940 )
nodes/fragment/63/node = SubResource( 29 )
nodes/fragment/63/position = Vector2( -2940, 920 )
nodes/fragment/64/node = SubResource( 30 )
nodes/fragment/64/position = Vector2( -4220, 1040 )
nodes/fragment/65/node = SubResource( 31 )
nodes/fragment/65/position = Vector2( -3400, 1000 )
nodes/fragment/66/node = SubResource( 32 )
nodes/fragment/66/position = Vector2( -2940, 1040 )
nodes/fragment/67/node = SubResource( 33 )
nodes/fragment/67/position = Vector2( -2940, 1160 )
nodes/fragment/68/node = SubResource( 34 )
nodes/fragment/68/position = Vector2( -2500, -80 )
nodes/fragment/69/node = SubResource( 35 )
nodes/fragment/69/position = Vector2( -2500, 40 )
nodes/fragment/70/node = SubResource( 37 )
nodes/fragment/70/position = Vector2( -2500, 920 )
nodes/fragment/71/node = SubResource( 38 )
nodes/fragment/71/position = Vector2( -2500, 1040 )
nodes/fragment/72/node = SubResource( 39 )
nodes/fragment/72/position = Vector2( -2500, 1920 )
nodes/fragment/73/node = SubResource( 40 )
nodes/fragment/73/position = Vector2( -2500, 2040 )
nodes/fragment/74/node = SubResource( 41 )
nodes/fragment/74/position = Vector2( -1500, 640 )
nodes/fragment/75/node = SubResource( 42 )
nodes/fragment/75/position = Vector2( -1500, 840 )
nodes/fragment/76/node = SubResource( 43 )
nodes/fragment/76/position = Vector2( -1500, 1040 )
nodes/fragment/77/node = SubResource( 44 )
nodes/fragment/77/position = Vector2( -1500, 1240 )
nodes/fragment/78/node = SubResource( 45 )
nodes/fragment/78/position = Vector2( -1900, 1480 )
nodes/fragment/79/node = SubResource( 46 )
nodes/fragment/79/position = Vector2( -1900, -200 )
nodes/fragment/80/node = SubResource( 47 )
nodes/fragment/80/position = Vector2( -1500, 0 )
nodes/fragment/81/node = SubResource( 48 )
nodes/fragment/81/position = Vector2( -1500, 200 )
nodes/fragment/82/node = SubResource( 49 )
nodes/fragment/82/position = Vector2( -1500, 400 )
nodes/fragment/83/node = SubResource( 50 )
nodes/fragment/83/position = Vector2( -1000, 1040 )
nodes/fragment/84/node = SubResource( 51 )
nodes/fragment/84/position = Vector2( -1900, 2080 )
nodes/fragment/85/node = SubResource( 52 )
nodes/fragment/85/position = Vector2( -1500, -200 )
nodes/fragment/86/node = SubResource( 53 )
nodes/fragment/86/position = Vector2( -1500, 1480 )
nodes/fragment/87/node = SubResource( 54 )
nodes/fragment/87/position = Vector2( -1500, 1680 )
nodes/fragment/88/node = SubResource( 55 )
nodes/fragment/88/position = Vector2( -1500, 1880 )
nodes/fragment/89/node = SubResource( 56 )
nodes/fragment/89/position = Vector2( -1500, 2080 )
nodes/fragment/90/node = SubResource( 57 )
nodes/fragment/90/position = Vector2( -1000, 640 )
nodes/fragment/91/node = SubResource( 58 )
nodes/fragment/91/position = Vector2( -1000, 840 )
nodes/fragment/92/node = SubResource( 59 )
nodes/fragment/92/position = Vector2( 2080, 780 )
nodes/fragment/93/node = SubResource( 60 )
nodes/fragment/93/position = Vector2( 2220, 1120 )
nodes/fragment/94/node = SubResource( 61 )
nodes/fragment/94/position = Vector2( 2520, 320 )
nodes/fragment/95/node = SubResource( 62 )
nodes/fragment/95/position = Vector2( 1800, 280 )
nodes/fragment/connections = PoolIntArray( 3, 0, 4, 0, 2, 0, 4, 1, 4, 0, 5, 0, 6, 0, 5, 1, 5, 0, 7, 0, 33, 0, 34, 0, 39, 0, 40, 0, 28, 0, 42, 0, 34, 0, 42, 1, 40, 0, 44, 1, 37, 0, 44, 0, 48, 0, 49, 0, 49, 0, 50, 1, 47, 0, 50, 0, 56, 0, 58, 0, 58, 0, 57, 0, 57, 0, 59, 0, 60, 0, 33, 1, 57, 1, 60, 0, 57, 1, 28, 0, 57, 2, 61, 0, 64, 0, 65, 0, 65, 0, 63, 0, 65, 1, 66, 0, 65, 2, 67, 0, 63, 0, 68, 0, 63, 0, 69, 0, 66, 0, 70, 0, 66, 0, 71, 0, 67, 0, 72, 0, 67, 0, 73, 0, 70, 0, 74, 1, 71, 0, 75, 1, 71, 0, 76, 1, 74, 0, 78, 0, 75, 0, 78, 1, 76, 0, 79, 0, 77, 0, 79, 1, 7, 0, 74, 0, 7, 0, 76, 0, 7, 2, 75, 0, 7, 2, 77, 0, 85, 0, 83, 0, 80, 0, 83, 1, 81, 0, 84, 0, 82, 0, 84, 1, 86, 0, 90, 0, 87, 0, 90, 1, 88, 0, 91, 0, 89, 0, 91, 1, 70, 0, 77, 1, 68, 0, 85, 1, 68, 0, 82, 1, 69, 0, 80, 1, 69, 0, 81, 1, 79, 0, 85, 0, 79, 0, 81, 0, 7, 1, 80, 0, 7, 1, 82, 0, 72, 0, 86, 1, 72, 0, 89, 1, 73, 0, 87, 1, 73, 0, 88, 1, 78, 0, 86, 0, 78, 0, 88, 0, 84, 0, 87, 0, 84, 0, 89, 0, 91, 0, 28, 1, 91, 0, 33, 0, 59, 0, 39, 1, 90, 0, 39, 0, 57, 0, 37, 0, 90, 0, 37, 1, 42, 0, 45, 1, 44, 0, 53, 1, 53, 0, 92, 0, 45, 0, 92, 1, 50, 0, 51, 1, 57, 2, 47, 0, 83, 0, 47, 1, 83, 0, 48, 0, 61, 0, 48, 1, 51, 0, 93, 1, 92, 0, 93, 0, 93, 0, 46, 2, 46, 0, 0, 1, 94, 0, 0, 0, 95, 0, 94, 0 )
