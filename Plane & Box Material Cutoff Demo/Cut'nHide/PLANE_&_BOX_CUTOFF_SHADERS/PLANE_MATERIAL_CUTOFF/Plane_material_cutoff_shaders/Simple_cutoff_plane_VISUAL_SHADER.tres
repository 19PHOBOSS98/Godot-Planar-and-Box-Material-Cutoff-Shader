[gd_resource type="VisualShader" load_steps=36 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=1]
uniform_name = "TextureUniform"
texture_type = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=2]
function = 19

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVec3Uniform" id=7]
uniform_name = "Portal_Rotation"

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]
default_input_values = [ 0, Vector3( 0, 0, 180 ) ]

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=11]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id=14]

[sub_resource type="VisualShaderNodeScalarOp" id=15]

[sub_resource type="VisualShaderNodeScalarFunc" id=16]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=17]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=18]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=19]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=20]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeVectorOp" id=22]

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=24]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=25]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=26]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=28]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=29]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=30]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=31]

[sub_resource type="VisualShaderNodeVec3Uniform" id=32]
uniform_name = "Portal_Origin"

[sub_resource type="VisualShaderNodeInput" id=33]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=34]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorFunc" id=35]
function = 2

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled;

uniform sampler2D TextureUniform : hint_albedo;
uniform vec3 Portal_Rotation;
uniform vec3 Portal_Origin;



void vertex() {
// Output:0

}

void fragment() {
// Input:62
	vec3 n_out62p0 = vec3(UV, 0.0);

// TextureUniform:102
	vec3 n_out102p0;
	float n_out102p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out62p0.xy);
		n_out102p0 = n_tex_read.rgb;
		n_out102p1 = n_tex_read.a;
	}

// VectorUniform:30
	vec3 n_out30p0 = Portal_Rotation;

// VectorDecompose:31
	float n_out31p0 = n_out30p0.x;
	float n_out31p1 = n_out30p0.y;
	float n_out31p2 = n_out30p0.z;

// ScalarFunc:52
	float n_out52p0 = radians(n_out31p1);

// ScalarFunc:50
	float n_out50p0 = cos(n_out52p0);

// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorUniform:6
	vec3 n_out6p0 = Portal_Origin;

// VectorFunc:7
	vec3 n_out7p0 = -(n_out6p0);

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out7p0;

// VectorDecompose:12
	float n_out12p0 = n_out5p0.x;
	float n_out12p1 = n_out5p0.y;
	float n_out12p2 = n_out5p0.z;

// ScalarOp:53
	float n_out53p0 = n_out50p0 * n_out12p0;

// ScalarFunc:51
	float n_out51p0 = sin(n_out52p0);

// ScalarOp:54
	float n_out54p0 = n_out51p0 * n_out12p2;

// ScalarOp:57
	float n_out57p0 = n_out53p0 - n_out54p0;

// ScalarFunc:114
	float n_out114p0 = -(n_out31p2);

// ScalarFunc:34
	float n_out34p0 = radians(n_out114p0);

// ScalarFunc:33
	float n_out33p0 = sin(n_out34p0);

// ScalarOp:37
	float n_out37p0 = n_out57p0 * n_out33p0;

// ScalarOp:55
	float n_out55p0 = n_out51p0 * n_out12p0;

// ScalarOp:56
	float n_out56p0 = n_out12p2 * n_out50p0;

// ScalarOp:58
	float n_out58p0 = n_out55p0 + n_out56p0;

// ScalarFunc:43
	float n_out43p0 = radians(n_out31p0);

// ScalarFunc:42
	float n_out42p0 = sin(n_out43p0);

// ScalarOp:46
	float n_out46p0 = n_out58p0 * n_out42p0;

// ScalarFunc:41
	float n_out41p0 = cos(n_out43p0);

// ScalarOp:47
	float n_out47p0 = n_out41p0 * n_out12p1;

// ScalarOp:49
	float n_out49p0 = n_out46p0 + n_out47p0;

// ScalarFunc:32
	float n_out32p0 = cos(n_out34p0);

// ScalarOp:38
	float n_out38p0 = n_out49p0 * n_out32p0;

// ScalarOp:40
	float n_out40p0 = n_out37p0 + n_out38p0;

// ScalarOp:115
	float n_in115p0 = 1.00000;
	float n_out115p0 = n_in115p0 - n_out40p0;

// Output:0
	ALBEDO = n_out102p0;
	ALPHA_SCISSOR = n_out115p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 704.363, 506.317 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 720, 100 )
nodes/fragment/0/position = Vector2( 2800, 2020 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -2920, 2200 )
nodes/fragment/3/node = SubResource( 6 )
nodes/fragment/3/position = Vector2( -2960, 2340 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( -2520, 2200 )
nodes/fragment/5/node = SubResource( 22 )
nodes/fragment/5/position = Vector2( -2020, 2260 )
nodes/fragment/6/node = SubResource( 32 )
nodes/fragment/6/position = Vector2( -2780, 2520 )
nodes/fragment/7/node = SubResource( 35 )
nodes/fragment/7/position = Vector2( -2420, 2520 )
nodes/fragment/12/node = SubResource( 4 )
nodes/fragment/12/position = Vector2( -1680, 2300 )
nodes/fragment/30/node = SubResource( 7 )
nodes/fragment/30/position = Vector2( -4220, 2000 )
nodes/fragment/31/node = SubResource( 8 )
nodes/fragment/31/position = Vector2( -3720, 2020 )
nodes/fragment/32/node = SubResource( 9 )
nodes/fragment/32/position = Vector2( -1440, 3220 )
nodes/fragment/33/node = SubResource( 10 )
nodes/fragment/33/position = Vector2( -1440, 3100 )
nodes/fragment/34/node = SubResource( 11 )
nodes/fragment/34/position = Vector2( -1800, 3220 )
nodes/fragment/37/node = SubResource( 12 )
nodes/fragment/37/position = Vector2( 780, 2760 )
nodes/fragment/38/node = SubResource( 13 )
nodes/fragment/38/position = Vector2( 780, 3160 )
nodes/fragment/40/node = SubResource( 15 )
nodes/fragment/40/position = Vector2( 1300, 2660 )
nodes/fragment/41/node = SubResource( 16 )
nodes/fragment/41/position = Vector2( -160, 1920 )
nodes/fragment/42/node = SubResource( 17 )
nodes/fragment/42/position = Vector2( -160, 1800 )
nodes/fragment/43/node = SubResource( 18 )
nodes/fragment/43/position = Vector2( -660, 1840 )
nodes/fragment/46/node = SubResource( 19 )
nodes/fragment/46/position = Vector2( 680, 1640 )
nodes/fragment/47/node = SubResource( 20 )
nodes/fragment/47/position = Vector2( 680, 1840 )
nodes/fragment/49/node = SubResource( 21 )
nodes/fragment/49/position = Vector2( 160, 3060 )
nodes/fragment/50/node = SubResource( 23 )
nodes/fragment/50/position = Vector2( -1300, 1600 )
nodes/fragment/51/node = SubResource( 24 )
nodes/fragment/51/position = Vector2( -2060, 1400 )
nodes/fragment/52/node = SubResource( 25 )
nodes/fragment/52/position = Vector2( -2060, 1720 )
nodes/fragment/53/node = SubResource( 26 )
nodes/fragment/53/position = Vector2( -500, 2180 )
nodes/fragment/54/node = SubResource( 27 )
nodes/fragment/54/position = Vector2( -500, 2400 )
nodes/fragment/55/node = SubResource( 28 )
nodes/fragment/55/position = Vector2( -500, 1320 )
nodes/fragment/56/node = SubResource( 29 )
nodes/fragment/56/position = Vector2( -500, 1540 )
nodes/fragment/57/node = SubResource( 30 )
nodes/fragment/57/position = Vector2( -100, 2300 )
nodes/fragment/58/node = SubResource( 31 )
nodes/fragment/58/position = Vector2( -120, 1420 )
nodes/fragment/62/node = SubResource( 33 )
nodes/fragment/62/position = Vector2( 1700, 2000 )
nodes/fragment/64/node = SubResource( 34 )
nodes/fragment/64/position = Vector2( -1555.83, 1312.21 )
nodes/fragment/102/node = SubResource( 1 )
nodes/fragment/102/position = Vector2( 2160, 1860 )
nodes/fragment/114/node = SubResource( 2 )
nodes/fragment/114/position = Vector2( -2460, 3200 )
nodes/fragment/115/node = SubResource( 3 )
nodes/fragment/115/position = Vector2( 1760, 2660 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 7, 0, 5, 1, 5, 0, 12, 0, 34, 0, 32, 0, 34, 0, 33, 0, 32, 0, 38, 1, 33, 0, 37, 1, 37, 0, 40, 0, 38, 0, 40, 1, 43, 0, 41, 0, 43, 0, 42, 0, 42, 0, 46, 1, 46, 0, 49, 0, 47, 0, 49, 1, 31, 0, 43, 0, 52, 0, 50, 0, 52, 0, 51, 0, 53, 0, 57, 0, 54, 0, 57, 1, 50, 0, 56, 1, 55, 0, 58, 0, 56, 0, 58, 1, 31, 1, 52, 0, 3, 0, 4, 1, 4, 0, 5, 0, 2, 0, 4, 0, 12, 2, 56, 0, 41, 0, 47, 0, 51, 0, 55, 0, 12, 0, 55, 1, 58, 0, 46, 0, 12, 1, 47, 1, 57, 0, 37, 0, 49, 0, 38, 0, 50, 0, 53, 0, 12, 0, 53, 1, 51, 0, 54, 0, 12, 2, 54, 1, 62, 0, 102, 0, 30, 0, 31, 0, 31, 2, 114, 0, 114, 0, 34, 0, 102, 0, 0, 0, 40, 0, 115, 1, 115, 0, 0, 18 )
