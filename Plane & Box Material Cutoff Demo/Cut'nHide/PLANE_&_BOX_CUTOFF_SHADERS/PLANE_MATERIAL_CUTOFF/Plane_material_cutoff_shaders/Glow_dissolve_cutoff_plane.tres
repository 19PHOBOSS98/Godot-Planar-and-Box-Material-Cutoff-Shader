[gd_resource type="VisualShader" load_steps=56 format=2]

[ext_resource path="res://new_noisetexture.tres" type="Texture" id=2]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeScalarOp" id=2]
operator = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "TextureUniform"
texture_type = 1

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "Edge_thickness"

[sub_resource type="VisualShaderNodeColorUniform" id=5]
uniform_name = "Inside_color"

[sub_resource type="VisualShaderNodeScalarFunc" id=6]
function = 19

[sub_resource type="VisualShaderNodeVectorDecompose" id=7]

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "camera"

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVec3Uniform" id=10]
uniform_name = "Portal_Rotation"

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=15]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeTransformVecMult" id=17]

[sub_resource type="VisualShaderNodeScalarOp" id=18]

[sub_resource type="VisualShaderNodeScalarFunc" id=19]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=20]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=23]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=24]

[sub_resource type="VisualShaderNodeVectorOp" id=25]

[sub_resource type="VisualShaderNodeScalarFunc" id=26]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=27]
function = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
function = 27

[sub_resource type="VisualShaderNodeScalarOp" id=29]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=30]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=31]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=32]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=33]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=34]

[sub_resource type="VisualShaderNodeVec3Uniform" id=35]
uniform_name = "Portal_Origin"

[sub_resource type="VisualShaderNodeInput" id=36]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "world"

[sub_resource type="VisualShaderNodeVectorOp" id=38]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=39]
uniform_name = "edge_color"

[sub_resource type="VisualShaderNodeVectorFunc" id=40]
function = 2

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarFunc" id=42]
output_port_for_preview = 0
function = 15

[sub_resource type="VisualShaderNodeInput" id=43]
input_name = "front_facing"

[sub_resource type="VisualShaderNodeVectorInterp" id=44]
default_input_values = [ 0, Vector3( 1, 1, 1 ), 1, Vector3( 1, 1, 1 ), 2, Vector3( 0.5, 0.5, 0.5 ) ]

[sub_resource type="VisualShaderNodeVectorInterp" id=45]

[sub_resource type="VisualShaderNodeScalarOp" id=46]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeScalarInterp" id=47]
default_input_values = [ 0, -0.1, 1, -0.5, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarClamp" id=48]
default_input_values = [ 0, 0.0, 1, -0.5, 2, 0.5 ]

[sub_resource type="VisualShaderNodeInput" id=49]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorDecompose" id=50]

[sub_resource type="VisualShaderNodeScalarOp" id=51]

[sub_resource type="VisualShaderNodeVectorCompose" id=52]

[sub_resource type="VisualShaderNodeScalarOp" id=53]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=54]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 1

[resource]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, cull_disabled;

uniform vec4 Inside_color : hint_color;
uniform sampler2D TextureUniform : hint_albedo;
uniform sampler2D tex_frg_73;
uniform vec3 Portal_Rotation;
uniform vec3 Portal_Origin;
uniform vec4 edge_color : hint_color;
uniform float Edge_thickness;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:104
	vec3 n_out104p0 = Inside_color.rgb;
	float n_out104p1 = Inside_color.a;

// Input:62
	vec3 n_out62p0 = vec3(UV, 0.0);

// TextureUniform:102
	vec3 n_out102p0;
	float n_out102p1;
	{
		vec4 n_tex_read = texture(TextureUniform, n_out62p0.xy);
		n_out102p0 = n_tex_read.rgb;
		n_out102p1 = n_tex_read.a;
	}

// Input:80
	bool n_out80p0 = FRONT_FACING;

// VectorMix:84
	vec3 n_out84p0 = mix(n_out104p0, n_out102p0, vec3(n_out80p0 ? 1.0 : 0.0));

// Texture:73
	vec4 tex_frg_73_read = texture(tex_frg_73, n_out62p0.xy);
	vec3 n_out73p0 = tex_frg_73_read.rgb;
	float n_out73p1 = tex_frg_73_read.a;

// VectorUniform:30
	vec3 n_out30p0 = Portal_Rotation;

// VectorDecompose:31
	float n_out31p0 = n_out30p0.x;
	float n_out31p1 = n_out30p0.y;
	float n_out31p2 = n_out30p0.z;

// ScalarFunc:52
	float n_out52p0 = radians(n_out31p1);

// ScalarFunc:50
	float n_out50p0 = cos(n_out52p0);

// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = VERTEX;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 1.0)).xyz;

// VectorUniform:6
	vec3 n_out6p0 = Portal_Origin;

// VectorFunc:7
	vec3 n_out7p0 = -(n_out6p0);

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 + n_out7p0;

// VectorDecompose:12
	float n_out12p0 = n_out5p0.x;
	float n_out12p1 = n_out5p0.y;
	float n_out12p2 = n_out5p0.z;

// ScalarOp:53
	float n_out53p0 = n_out50p0 * n_out12p0;

// ScalarFunc:51
	float n_out51p0 = sin(n_out52p0);

// ScalarOp:54
	float n_out54p0 = n_out51p0 * n_out12p2;

// ScalarOp:57
	float n_out57p0 = n_out53p0 - n_out54p0;

// ScalarFunc:105
	float n_out105p0 = -(n_out31p2);

// ScalarFunc:34
	float n_out34p0 = radians(n_out105p0);

// ScalarFunc:33
	float n_out33p0 = sin(n_out34p0);

// ScalarOp:37
	float n_out37p0 = n_out57p0 * n_out33p0;

// ScalarOp:55
	float n_out55p0 = n_out51p0 * n_out12p0;

// ScalarOp:56
	float n_out56p0 = n_out12p2 * n_out50p0;

// ScalarOp:58
	float n_out58p0 = n_out55p0 + n_out56p0;

// ScalarFunc:43
	float n_out43p0 = radians(n_out31p0);

// ScalarFunc:42
	float n_out42p0 = sin(n_out43p0);

// ScalarOp:46
	float n_out46p0 = n_out58p0 * n_out42p0;

// ScalarFunc:41
	float n_out41p0 = cos(n_out43p0);

// ScalarOp:47
	float n_out47p0 = n_out41p0 * n_out12p1;

// ScalarOp:49
	float n_out49p0 = n_out46p0 + n_out47p0;

// ScalarFunc:32
	float n_out32p0 = cos(n_out34p0);

// ScalarOp:38
	float n_out38p0 = n_out49p0 * n_out32p0;

// ScalarOp:40
	float n_out40p0 = n_out37p0 + n_out38p0;

// ScalarMix:91
	float n_in91p0 = -0.10000;
	float n_in91p1 = -0.50000;
	float n_out91p0 = mix(n_in91p0, n_in91p1, n_out40p0);

// ScalarClamp:92
	float n_in92p1 = -0.50000;
	float n_in92p2 = 0.50000;
	float n_out92p0 = clamp(n_out91p0, n_in92p1, n_in92p2);

// ScalarOp:89
	float n_out89p0 = dot(n_out73p0, vec3(0.333333, 0.333333, 0.333333)) - n_out92p0;

// ScalarFunc:77
	float n_out77p0 = round(n_out89p0);

// ColorUniform:69
	vec3 n_out69p0 = edge_color.rgb;
	float n_out69p1 = edge_color.a;

// ScalarUniform:103
	float n_out103p0 = Edge_thickness;

// ScalarOp:99
	float n_out99p0 = n_out89p0 - n_out103p0;

// ScalarFunc:100
	float n_out100p0 = round(n_out99p0);

// ScalarOp:101
	float n_out101p0 = n_out77p0 - n_out100p0;

// VectorOp:68
	vec3 n_out68p0 = n_out69p0 * vec3(n_out101p0);

// VectorMix:85
	vec3 n_out85p0 = mix(n_out104p0, n_out68p0, vec3(n_out80p0 ? 1.0 : 0.0));

// Output:0
	ALBEDO = n_out84p0;
	ALPHA = n_out77p0;
	EMISSION = n_out85p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 700.535, 231.674 )
modes/cull = 2
modes/depth_draw = 3
nodes/vertex/0/position = Vector2( 720, 100 )
nodes/fragment/0/position = Vector2( 6120, 1980 )
nodes/fragment/2/node = SubResource( 8 )
nodes/fragment/2/position = Vector2( -2920, 2200 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -2960, 2340 )
nodes/fragment/4/node = SubResource( 17 )
nodes/fragment/4/position = Vector2( -2520, 2200 )
nodes/fragment/5/node = SubResource( 25 )
nodes/fragment/5/position = Vector2( -2020, 2260 )
nodes/fragment/6/node = SubResource( 35 )
nodes/fragment/6/position = Vector2( -2780, 2520 )
nodes/fragment/7/node = SubResource( 40 )
nodes/fragment/7/position = Vector2( -2420, 2520 )
nodes/fragment/12/node = SubResource( 7 )
nodes/fragment/12/position = Vector2( -1680, 2300 )
nodes/fragment/30/node = SubResource( 10 )
nodes/fragment/30/position = Vector2( -4060, 2020 )
nodes/fragment/31/node = SubResource( 11 )
nodes/fragment/31/position = Vector2( -3720, 2020 )
nodes/fragment/32/node = SubResource( 12 )
nodes/fragment/32/position = Vector2( -1440, 3220 )
nodes/fragment/33/node = SubResource( 13 )
nodes/fragment/33/position = Vector2( -1440, 3100 )
nodes/fragment/34/node = SubResource( 14 )
nodes/fragment/34/position = Vector2( -1800, 3220 )
nodes/fragment/37/node = SubResource( 15 )
nodes/fragment/37/position = Vector2( 400, 2740 )
nodes/fragment/38/node = SubResource( 16 )
nodes/fragment/38/position = Vector2( 400, 3140 )
nodes/fragment/40/node = SubResource( 18 )
nodes/fragment/40/position = Vector2( 1360, 2800 )
nodes/fragment/41/node = SubResource( 19 )
nodes/fragment/41/position = Vector2( -160, 1920 )
nodes/fragment/42/node = SubResource( 20 )
nodes/fragment/42/position = Vector2( -160, 1800 )
nodes/fragment/43/node = SubResource( 21 )
nodes/fragment/43/position = Vector2( -660, 1840 )
nodes/fragment/46/node = SubResource( 22 )
nodes/fragment/46/position = Vector2( 380, 1680 )
nodes/fragment/47/node = SubResource( 23 )
nodes/fragment/47/position = Vector2( 380, 1880 )
nodes/fragment/49/node = SubResource( 24 )
nodes/fragment/49/position = Vector2( -220, 3040 )
nodes/fragment/50/node = SubResource( 26 )
nodes/fragment/50/position = Vector2( -1300, 1600 )
nodes/fragment/51/node = SubResource( 27 )
nodes/fragment/51/position = Vector2( -2060, 1400 )
nodes/fragment/52/node = SubResource( 28 )
nodes/fragment/52/position = Vector2( -2060, 1720 )
nodes/fragment/53/node = SubResource( 29 )
nodes/fragment/53/position = Vector2( -500, 2180 )
nodes/fragment/54/node = SubResource( 30 )
nodes/fragment/54/position = Vector2( -500, 2400 )
nodes/fragment/55/node = SubResource( 31 )
nodes/fragment/55/position = Vector2( -500, 1320 )
nodes/fragment/56/node = SubResource( 32 )
nodes/fragment/56/position = Vector2( -500, 1540 )
nodes/fragment/57/node = SubResource( 33 )
nodes/fragment/57/position = Vector2( -100, 2300 )
nodes/fragment/58/node = SubResource( 34 )
nodes/fragment/58/position = Vector2( -120, 1420 )
nodes/fragment/62/node = SubResource( 36 )
nodes/fragment/62/position = Vector2( 1760, 1280 )
nodes/fragment/64/node = SubResource( 37 )
nodes/fragment/64/position = Vector2( -1555.83, 1312.21 )
nodes/fragment/68/node = SubResource( 38 )
nodes/fragment/68/position = Vector2( 5060, 2780 )
nodes/fragment/69/node = SubResource( 39 )
nodes/fragment/69/position = Vector2( 5020, 2220 )
nodes/fragment/73/node = SubResource( 41 )
nodes/fragment/73/position = Vector2( 3160, 1560 )
nodes/fragment/77/node = SubResource( 42 )
nodes/fragment/77/position = Vector2( 4460, 2020 )
nodes/fragment/80/node = SubResource( 43 )
nodes/fragment/80/position = Vector2( 5540, 2320 )
nodes/fragment/84/node = SubResource( 44 )
nodes/fragment/84/position = Vector2( 5700, 1680 )
nodes/fragment/85/node = SubResource( 45 )
nodes/fragment/85/position = Vector2( 5660, 2740 )
nodes/fragment/89/node = SubResource( 46 )
nodes/fragment/89/position = Vector2( 3560, 1760 )
nodes/fragment/91/node = SubResource( 47 )
nodes/fragment/91/position = Vector2( 3540, 2440 )
nodes/fragment/92/node = SubResource( 48 )
nodes/fragment/92/position = Vector2( 3560, 2200 )
nodes/fragment/93/node = SubResource( 49 )
nodes/fragment/93/position = Vector2( 1960, 2160 )
nodes/fragment/94/node = SubResource( 50 )
nodes/fragment/94/position = Vector2( 1740, 1800 )
nodes/fragment/95/node = SubResource( 51 )
nodes/fragment/95/position = Vector2( 2360, 1900 )
nodes/fragment/96/node = SubResource( 52 )
nodes/fragment/96/position = Vector2( 2760, 1800 )
nodes/fragment/97/node = SubResource( 53 )
nodes/fragment/97/position = Vector2( 2360, 2120 )
nodes/fragment/99/node = SubResource( 54 )
nodes/fragment/99/position = Vector2( 4100, 2600 )
nodes/fragment/100/node = SubResource( 1 )
nodes/fragment/100/position = Vector2( 4100, 2840 )
nodes/fragment/101/node = SubResource( 2 )
nodes/fragment/101/position = Vector2( 4640, 2780 )
nodes/fragment/102/node = SubResource( 3 )
nodes/fragment/102/position = Vector2( 3460, 1120 )
nodes/fragment/103/node = SubResource( 4 )
nodes/fragment/103/position = Vector2( 3720, 2720 )
nodes/fragment/104/node = SubResource( 5 )
nodes/fragment/104/position = Vector2( 5100, 1460 )
nodes/fragment/105/node = SubResource( 6 )
nodes/fragment/105/position = Vector2( -2580, 3120 )
nodes/fragment/connections = PoolIntArray( 6, 0, 7, 0, 7, 0, 5, 1, 5, 0, 12, 0, 30, 0, 31, 0, 34, 0, 32, 0, 34, 0, 33, 0, 32, 0, 38, 1, 33, 0, 37, 1, 37, 0, 40, 0, 38, 0, 40, 1, 43, 0, 41, 0, 43, 0, 42, 0, 42, 0, 46, 1, 46, 0, 49, 0, 47, 0, 49, 1, 31, 0, 43, 0, 52, 0, 50, 0, 52, 0, 51, 0, 53, 0, 57, 0, 54, 0, 57, 1, 50, 0, 56, 1, 55, 0, 58, 0, 56, 0, 58, 1, 31, 1, 52, 0, 3, 0, 4, 1, 4, 0, 5, 0, 2, 0, 4, 0, 12, 2, 56, 0, 41, 0, 47, 0, 51, 0, 55, 0, 12, 0, 55, 1, 58, 0, 46, 0, 12, 1, 47, 1, 57, 0, 37, 0, 49, 0, 38, 0, 50, 0, 53, 0, 12, 0, 53, 1, 51, 0, 54, 0, 12, 2, 54, 1, 80, 0, 84, 2, 73, 0, 89, 0, 40, 0, 91, 2, 91, 0, 92, 0, 92, 0, 89, 1, 62, 0, 94, 0, 93, 0, 97, 0, 89, 0, 99, 0, 89, 0, 77, 0, 99, 0, 100, 0, 80, 0, 85, 2, 100, 0, 101, 1, 77, 0, 101, 0, 69, 0, 68, 0, 85, 0, 0, 5, 77, 0, 0, 1, 84, 0, 0, 0, 101, 0, 68, 1, 68, 0, 85, 1, 62, 0, 102, 0, 102, 0, 84, 1, 97, 0, 95, 1, 103, 0, 99, 1, 104, 0, 84, 0, 104, 0, 85, 0, 95, 0, 96, 1, 94, 0, 96, 0, 94, 1, 95, 0, 62, 0, 73, 0, 31, 2, 105, 0, 105, 0, 34, 0 )
